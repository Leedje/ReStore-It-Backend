plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.3'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.netflix.dgs.codegen' version '7.0.3'
    id 'org.hibernate.orm' version '6.6.8.Final'
    id 'org.graalvm.buildtools.native' version '0.10.5'
    id "org.sonarqube" version "6.0.1.5171"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(23)
    }
}

repositories {
    mavenCentral()
    gradlePluginPortal()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'io.projectreactor:reactor-core:3.4.8'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.microsoft.sqlserver:mssql-jdbc'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    //mapstruct mapper
    implementation 'org.mapstruct:mapstruct:1.6.3'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'

    //jwt token dependecies
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation("io.jsonwebtoken:jjwt-api:0.11.5")
    implementation("io.jsonwebtoken:jjwt-impl:0.11.5")
    implementation("io.jsonwebtoken:jjwt-jackson:0.11.5")
}

sonar {
    properties {
        property "sonar.projectKey", "Leedje_ReStore-It-Backend"
        property "sonar.organization", "restoreit"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

test {
    useJUnitPlatform()
    exclude '**/ReStoreItApplicationTests.class' // Prevents Spring Boot from running empty test classes
}

generateJava {
    schemaPaths = ["${projectDir}/src/main/resources/graphql-client"]
    packageName = 'com.example.restoreit.codegen'
    generateClient = true
}

tasks.named('test') {
    useJUnitPlatform()
}
